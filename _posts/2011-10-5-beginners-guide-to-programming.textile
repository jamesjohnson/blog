---
layout: post
title: "What Up Biz Guy - Build you first webapp"
---

A lot of friends have asked me recently how I learned web development. The short answer is with a lot of help, but if you are interested in the specifics, I hope the below helps!

I was a History major in college and the most "programming related" class I took was the lowest level of Math offered. After graduating school I worked at a <a href='www.yourenew.com'>startup</a> and caught the technology bug. I have no special skills, no education and no tricks other than some really awesome/smart friends who helped me learn to build stuff. The below guideline is aimed to get you up to speed as quickly as possible on the basics of webdevelopment. At least, this is how I did it. I promise you if you spend > 4 hours a day for the next 6 months working on some of the resource listed below, you will be able to build a basic website.

1) The PC has gotta go - Finding people who can help you is really important, and in my experience less people can help you working on a PC. Go on eBay or on the Apple refurbished store. I got the rolls royce of used computers... the 27inch iMac for $1300, but you can get a $400-500 mac no problemo. It is a lot of money, but if you are serious about development its completely worth it. The other option is wiping your PC and installing <a href=''>ubuntu</a>. If you need your PC for work/other things this may not be a realistic option.

2) The Terminal - You can search for this on a Mac using spotlight. Open it up and type in ls. This will list everything in your directory. This is exactly the same as clicking on my computer and seeing all the file names. Instead of clicking however, you type in cd directoryname/ to go "into" a directory- If this is confusing google cd and cd .. (moving back) - you will figure it out :). Learn more about terminal commands <a href=''>here</a>. Web developers spend all their time in the terminal and in the text editor...

3) Install a text-editor - I did trial by fire with an awesome program called gvim (now using mvim). I knew the commands for save :w, quit :q, and insert mode i - I got by on these for a good 2 months. This isn't completely necessary, as textmate is a much more beginner friendly option. Install either of these. If you decide on mvim - check out <a href=''>this</a> demo.

5) Before you start building, here is a quick overview of what you will build.
		a) A Database - A lot of people use SQL (sqlite, postgresql, mysql) but there are also other options that are becoming more and more popular. Stick to SQL to start because its easy to understand the basic concepts. <a href=''>Here</a> is a great overview, but I always think of it like a big excel table with columns you can't easily change. Each row in the column is what you are either Creating, Reading, Updating or Destroying 

		b) The "Front End" - Two languages make up the basics of front end of the website:
				i) HTML - The "tags" that you use to structure your pages. <a href=''>Here</a> is a great overview of html
				ii) CSS - You apply a CSS Rule to an HTML tag. <a href=''>This</a> is a good overview, it also has a demo you can practice with. Do not expect to pick it up immediately, but with time you will pick it up eventually. 

		c) The Scripting language - It is the piece that connects the front end (the way the site looks) to the database. This part of the site is the "Ruby on Rails" or the "Python" the "PHP" - there are a lot of options here for getting started, but if you want to build a website Ruby on Rails is the most beginner friendly IMO.

6) On a mac - download a program called <a href=''>homebrew</a> - it will help you install stuff in a really easy way.

7) Run the following commands in your terminal. You can copy and paste the following right in there using command-c - homebrew intall ruby, homebrew install rails,  - You now have Ruby on Rails set up. Lets get you your first web app

8) Run the following command - 
			- rails new blog (you just created your first webapp)
			- cd blog (press enter and you will 'click' on that directory)

9) Now watch this <a href=''>screencast</a>... Run the commands as they are run in the video. Once you are done you will have built your first webapp, and will be 3 months ahead of me when I started. 

10) Where from here? Come up with a project idea, figure out the different pages/functionality you need - Have a look at <a href=''>Ryan Bates</a> Screencasts and see if anything he is doing could help you. When you get errors, or get stuck, the best places to ask for help are on <a href=''>Stackoverflow</a> and then you can always type errors into <a href=''>Google</a>.

11) The website is now running, How do I put it online? <a href=''>Heroku</a> makes it easy to get a website up quickly. You need to intall <a href=''>git</a> and also <a href=''>read</a> a lot about it. The basic concept is this. For your purposes you need to do the following things:
		i) From the terminal home - gem install heroku
    ii) git add .
    iii) git commit -m "first commit"
    iv) git push heroku master

12) If you made it to the end and some/any/all of these steps worked out for you, then you have probably caught the "building things" virus and you will probably have to quit your job to start hacking the dream. I strongly recommend it. 

<a href="http://twitter.com/jamesjohnsona">Following or @ me on Twitter if you have any questions or comments!</a>


