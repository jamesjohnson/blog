---
layout: post
title: Ruby on Rails for Beginners
---
Learning to code is not easy. Like most things that are worth doing, it takes significant time, effort and suffering just to get to a very basic level of competency. The biggest barrier I found in teaching myself web programming was my own frustration and lack of progress. The first steps are in some ways the hardest, but once you have experienced some small success, it becomes much easier to keep coming back.

Ruby on Rails is awesome for beginners who don't know the right questions to ask. Everything from the <a href="rubyonrails.org">rubyonrails.org</a> website to the installation process makes it a <i>little</i> bit easier for the total amateur. Scaffolding for me was the *big* advantage for rails over other language/frameworks, because I could read and modify the code and experiment without having to build something. After figuring the basics of rails routes, the MVC relationsip, bundler and watching some <a href="http://railscasts">Railscasts</a>(Ryan Bates is the man!), I was able to do <u>alot</u>. I could build an MVP for a lot of ideas I had, as odds were someone had already created 10 gems that I could package together and send over to heroku to host for me. 

After getting to this basic level of understanding with rails, I was able to develop some skills with html/css/javascript/git/e.t.c. and copy some of the features and functionality of my favorite websites. The limits of this approach, however, started to become evident to me a few months ago. I have recently been working with another, significantly more experienced developer who has spent a lot of his time recenlty working in Python. I am only spending about 50% of my time helping out with code, but the limits of my ability are pretty apparent. If he changes anything, e.g. DataMapper VS ActiveRecord, it becomes very difficult for me to keep up. The "convention over configuration" approach allowed me to get to a decent level of ability (from an amateurs perspective), without really learning that much about Ruby itself.

If I could learn from scratch again I think I would do it the same way, because I didn't realize how much fun coding could be, until I started to see some progress. That being said, I now need to go back and learn some very basics in order to make anymore progress. I didn't learn to code so much as I learned to follow and find a lot of instructions, and suffer when I wasn't able to find the right answer. For all those prospective developers out there, here are some things that I read that inspired me to jump in and learn Ruby on Rails. Its worth it.

